<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AttachmentInformationRequired" xml:space="preserve">
    <value>The Attachment Information is required.</value>
  </data>
  <data name="AttachmentTitleRequired" xml:space="preserve">
    <value>Please provide the Attachment Title.</value>
  </data>
  <data name="BoundsRequired" xml:space="preserve">
    <value>bounds is a required property for FormField and cannot be null</value>
  </data>
  <data name="DocumentIdRequired" xml:space="preserve">
    <value>Document ID is required</value>
  </data>
  <data name="TemplateIdRequired" xml:space="preserve">
    <value>Template ID is required or not in GUID type</value>
  </data>
  <data name="FieldTypeRequired" xml:space="preserve">
    <value>fieldType is a required property for FormField and cannot be null</value>
  </data>
  <data name="BothFileParamUsed" xml:space="preserve">
    <value>Conflicting file information detected. Please use either the 'Files' option to send a file or the 'FileUrls' option to give a file link. Using both options at the same time is not possible.</value>
  </data>
    <data name="MissingFileInput" xml:space="preserve">
    <value>File input missing. To proceed, please upload a file using the 'Files' property or provide a URL for the file using the 'FileUrls' property.</value>
  </data>
  <data name="NoSignerFormFieldsWhenNoFile" xml:space="preserve">
    <value>Signer cannot have 'FormFields' if no file has been uploaded. Please upload a file before adding 'FormFields' for the Signer</value>
  </data>
  <data name="NoRoleFormFieldsWhenNoFile" xml:space="preserve">
    <value>Role cannot have 'FormFields' if no file has been uploaded. Please upload a file before adding 'FormFields' for the Role</value>
  </data>
  <data name="FilesIsSet" xml:space="preserve">
    <value>Missing required parameter 'files' when calling DocumentApi-&gt;SendDocument</value>
  </data>
  <data name="FilesizesWithin100MB" xml:space="preserve">
    <value>Document's size exceeds the limit of 100 MB. Please replace it. (all files combined)</value>
  </data>
  <data name="FileTypeRequired" xml:space="preserve">
    <value>The File type for attachment required.</value>
  </data>
  <data name="ImageFormatRequired" xml:space="preserve">
    <value>The supported format for the Image is required.</value>
  </data>
  <data name="ImageInformationRequired" xml:space="preserve">
    <value>The Image Information is required.</value>
  </data>
  <data name="ImageTitleRequired" xml:space="preserve">
    <value>Please provide the Image Title.</value>
  </data>
  <data name="InvalidBrandId" xml:space="preserve">
    <value>Provide a valid brand ID</value>
  </data>
  <data name="InvalidFormat" xml:space="preserve">
    <value>The given format is not valid.</value>
  </data>
  <data name="TextTagValueNotSupported" xml:space="preserve">
    <value>The Value property is supported for text tag definitions only for text box and label fields</value>
  </data>
  <data name="ExpiryDaysValOutOfRange" xml:space="preserve">
    <value>Provided expiry days should be within the range 1 - 180</value>
  </data>
  <data name="ExpiryHoursValOutOfRange" xml:space="preserve">
    <value>Provided expiry hours should be within the range 8 - 4320</value>
  </data>
  <data name="ExpirySpecifcDateOutOfRange" xml:space="preserve">
    <value>Exact date and time given for document expiry should be between 1 to 180 days</value>
  </data>
  <data name="InvalidTextTagSize" xml:space="preserve">
    <value>Invalid field size. Field height and width should be greater then 0.</value>
  </data>
  <data name="LanguageRequired" xml:space="preserve">
    <value>Any one of the given language is required.</value>
  </data>
  <data name="MessageLengthExceeds" xml:space="preserve">
    <value>The message exceeds the limit of 5000 characters</value>
  </data>
  <data name="NewSignerEmailAddressRequired" xml:space="preserve">
    <value>New signer email address is required for changing the recipient details</value>
  </data>
  <data name="OldSignerEmailRequired" xml:space="preserve">
    <value>Old signer email is required for changing the recipient details</value>
  </data>
  <data name="PageNumberRquired" xml:space="preserve">
    <value>pageNumber is a required property for FormField and cannot be null</value>
  </data>
  <data name="ReasonRequired" xml:space="preserve">
    <value>A reason is required for changing recipient details</value>
  </data>
  <data name="SameProperty" xml:space="preserve">
    <value>Both title and the document information cannot be present for a single document.</value>
  </data>
  <data name="SameSignerEmailNotAllowed" xml:space="preserve">
    <value>Old and new emails should not be the same</value>
  </data>
  <data name="SignerNameRequired" xml:space="preserve">
    <value>New signer name required for changing the recipient details</value>
  </data>
  <data name="SignerOrderPositiveValue" xml:space="preserve">
    <value>Signer order should be a positive integer</value>
  </data>
  <data name="SignersIsSet" xml:space="preserve">
    <value>Missing required parameter 'signers' when calling DocumentApi-&gt;SendDocument</value>
  </data>
  <data name="TemplateIdNull" xml:space="preserve">
    <value>Parameter {nameof(sendForSignFromTemplate.TemplateId)} should be null or empty</value>
  </data>
  <data name="TitleLengthExceeds" xml:space="preserve">
    <value>The title exceeds the limit of 256 characters</value>
  </data>
  <data name="TitleOrDocumentInfoIsRequired" xml:space="preserve">
    <value>Title or Document Information of the document is required.</value>
  </data>
  <data name="ValidUrl" xml:space="preserve">
    <value>Please provide valid file URL</value>
  </data>
  <data name="BothFieldsRequired" xml:space="preserve">
    <value>MinDate and MaxDate value is required</value>
  </data>
  <data name="MaxDateValidation" xml:space="preserve">
    <value>Max date should be always greater than min date</value>
  </data>
  <data name="EditableDateFormatRequired" xml:space="preserve">
    <value>The Date Format is required for Editable Date Field.</value>
  </data>
  <data name="EditableDateInformationRequired" xml:space="preserve">
    <value>EditableDateFieldSettings shouldn't be null</value>
  </data>
  <data name="EmailIdRequired" xml:space="preserve">
    <value>Email ID is a required property and cannot be null or empty</value>
  </data>
  <data name="InvalidEmailAddress" xml:space="preserve">
    <value>Provide a valid Email ID</value>
  </data>
  <data name="UserIdRequired" xml:space="preserve">
    <value>User ID is a required property and cannot be null or empty</value>
  </data>
  <data name="TeamIdIsSet" xml:space="preserve">
    <value>Missing required parameter 'teamId' when calling TeamApi-&amp;gt;GetTeamDetails</value>
  </data>
  <data name="TeamIdrequired" xml:space="preserve">
    <value>Missing required parameter 'teamId' when calling TeamApi-&amp;gt;Update</value>
  </data>
  <data name="TeamNameIsSet" xml:space="preserve">
    <value>Missing required parameter 'teamName' when calling TeamApi-&amp;gt;Create</value>
  </data>
  <data name="TeamNameRequired" xml:space="preserve">
    <value>Missing required parameter 'teamName' when calling TeamApi-&amp;gt;Update</value>
  </data>
  <data name="BrandIdDelete" xml:space="preserve">
    <value>Missing required parameter 'brandId' when calling BrandingApi-&amp;gt;DeleteBrand</value>
  </data>
  <data name="InValidEndDate" xml:space="preserve">
    <value>End date should be greater or equal to start date.</value>
  </data>
  <data name="BrandIdResetDefault" xml:space="preserve">
    <value>Missing required parameter 'brandId' when calling BrandingApi-&amp;gt;ResetDefaultBrand</value>
  </data>
  <data name="EmptyLabels" xml:space="preserve">
    <value>Label cannot be null or empty</value>
  </data>
  <data name="LabelMaxLength" xml:space="preserve">
    <value>Labels cannot have more than 255 characters.</value>
  </data>
  <data name="MaxLabelsCount" xml:space="preserve">
    <value>A document can only contain a maximum of 50 labels</value>
  </data>
  <data name="MaxTemplateOrDocumentLabelsCount" xml:space="preserve">
    <value>A document or template can only contain a maximum of 50 labels</value>
  </data>
  <data name="BrandLogoRequired" xml:space="preserve">
    <value>The Brand logo is required</value>
  </data>
  <data name="BrandNameRequired" xml:space="preserve">
    <value>The Brand name is required</value>
  </data>
  <data name="AccessCodePropertyRequired" xml:space="preserve">
    <value>AccessCode cannot be null or empty when authentication type is AccessCode</value>
  </data>
  <data name="DocumentIdRequiredAPI" xml:space="preserve">
    <value>Missing required parameter 'documentId' when calling DocumentApi-&gt;AddAuthentication</value>
  </data>
  <data name="EmailIdRequiredAPI" xml:space="preserve">
    <value>Missing required parameter 'emailId' when calling DocumentApi-&gt;AddAuthentication</value>
  </data>
  <data name="AccessCodePropertyNoRequired" xml:space="preserve">
    <value>AccessCode must be null or empty when authentication type is EmailOTP</value>
  </data>
  <data name="EnterValidURL" xml:space="preserve">
    <value>Please Enter Valid URL</value>
  </data>
  <data name="HyperlinkLabelFieldsRequired" xml:space="preserve">
    <value>HyperlinkText is required for Hyperlink FormField</value>
  </data>
  <data name="BothHyperlinkFieldsRequired" xml:space="preserve">
    <value>Both HyperlinkText and value is required for Hyperlink FormField</value>
  </data>
  <data name="HyperlinkValueFieldsRequired" xml:space="preserve">
    <value>Value is required for Hyperlink FormField</value>
  </data>
  <data name="DefaultNewExpiryDate" xml:space="preserve">
    <value>The new expiry date must not be less than the current date and time</value>
  </data>
  <data name="DocumentIdAccessCode" xml:space="preserve">
    <value>Missing required parameter 'documentId' when calling DocumentApi-&gt;ExtendExpiry</value>
  </data>
  <data name="InvalidDateFormat" xml:space="preserve">
    <value>Invalid date format. Supported dateformat is</value>
  </data>
  <data name="InvalidDefaultOption" xml:space="preserve">
    <value>Default option mismatches with the dropdown list of options</value>
  </data>
  <data name="RequiredDropdownOptions" xml:space="preserve">
    <value>Dropdown option(s) are required for the Dropdown form field</value>
  </data>
  <data name="InvalidDropdownOption" xml:space="preserve">
    <value>Dropdown option(s) cannot be null or empty</value>
  </data>
  <data name="DuplicateDropdownOption" xml:space="preserve">
    <value>Duplicate options are not allowed for the dropdown list</value>
  </data>
  <data name="RequiredName" xml:space="preserve">
      <value>Name is a required parameter to create sender identity.</value>
  </data>
  <data name="TitleAndDocumentInfo" xml:space="preserve">
      <value>Both title and the document information cannot be present for a single document.</value>
  </data>
  <data name="NotInAllowedTolerance" xml:space="preserve">
      <value>The webhook cannot be processed because the current timestamp is outside of the allowed tolerance</value>
  </data>
  <data name="NotValidSignature" xml:space="preserve">
      <value>The signature for the webhook is not present/matched with the BoldSign-Signature header</value>
  </data>
  <data name="SignatureHeaderIsNull" xml:space="preserve">
      <value>Signature header can not be null</value>
  </data>
  <data name="WrongSignature" xml:space="preserve">
      <value>The webhook cannot be processed because the signature cannot be safely calculated</value>
  </data>
  <data name="TemplateIdDownload" xml:space="preserve">
    <value>Missing required parameter 'templateId' when calling TemplateApi-&gt;DownloadTemplate</value>
  </data>
  <data name="TemplateIdIsSet" xml:space="preserve">
    <value>Missing required parameter 'templateId' when calling TemplateApi-&gt;GetProperties</value>
  </data>
  <data name="EmbeddedTemplateIdNull" xml:space="preserve">
    <value>The parameter 'templateId' should not be null or empty.</value>
  </data>
  <data name="TemplateTitleRequired" xml:space="preserve">
      <value>Template title is required for create template.</value>
  </data>
  <data name="RolesRequired" xml:space="preserve">
      <value>Roles cannot be null or empty.</value>
  </data>
  <data name="FormFieldsRequired" xml:space="preserve">
      <value>Form fields value cannot be null or empty.</value>
  </data>
  <data name="ReviewerFields" xml:space="preserve">
      <value>Reviewer should not have any form fields.</value>
  </data>
  <data name="GroupNameRequired" xml:space="preserve">
      <value>Please provide group name for radio button form field.</value>
  </data>
  <data name="InvalidSignerOrder" xml:space="preserve">
      <value>Signer order should be between 1 and 50.</value>
  </data>
  <data name="DuplicateRoleIndex" xml:space="preserve">
      <value>Duplicate role index are not allowed.</value>
  </data>
  <data name="DocumentInfoMissing" xml:space="preserve">
      <value>document info is missing for the  signer’s language {0}.</value>
  </data>
  <data name="ExtraLanguageValues" xml:space="preserve">
      <value>Only one document info is allowed per signer language.</value>
  </data>
  <data name="DocumentTitleRequired" xml:space="preserve">
      <value>Document title is required for document info.</value>
  </data>
  <data name="InvalidLanguage" xml:space="preserve">
      <value>The document info language {0} is not found or used in roles.</value>
  </data>
  <data name="RoleName" xml:space="preserve">
      <value>Role Name is Required.</value>
  </data>
  <data name="StandardFieldVisibilityErr" xml:space="preserve">
    <value>Custom field creation should only be allowed when built-in form fields are enabled. If not, shared custom fields can be enabled.</value>
  </data>
  <data name="DocumentInfoLocaleMissing" xml:space="preserve">
      <value>The document info locale does not match the signer’s locale {0}.</value>
  </data>
  <data name="FieldNameRequired" xml:space="preserve">
    <value>Field name is required</value>
  </data>
  <data name="InvalidLocale" xml:space="preserve">
      <value>The document info locale {0} does not match the one used in roles.</value>
  </data>
  <data name="FieldDescriptionRequired" xml:space="preserve">
    <value>Field description is required</value>
  </data>
  <data name="FieldIdRequired" xml:space="preserve">
    <value>Field id is required</value>
  </data>
    <data name="UnsupportedFileType" xml:space="preserve">
    <value>Unsupported file(s). Supported file formats are PDF, Word, PNG, JPEG, JPG and XLSX</value>
  </data>
    <data name="UnsupportedMediaType" xml:space="preserve">
    <value>Unsupported Media Type</value>
  </data>
    <data name="EmptyFields" xml:space="preserve">
    <value>{0} cannot be null or empty.</value>
  </data>
  <data name="ExtraLocaleValues" xml:space="preserve">
      <value>Only one document info is allowed per signer locale.</value>
  </data>
  <data name="AllowConfigureFieldsError" xml:space="preserve">
      <value>The 'AllowFieldConfiguration' property is unsupported for the Reviewer role.</value>
  </data>
  <data name="RequiredNameOrRedirectUrl" xml:space="preserve">
      <value>Either name or redirectUrl is required to update sender identity.</value>
  </data>
  <data name="UnsupportedBrandLogoType" xml:space="preserve">
      <value>Unsupported file. Supported file formats are PNG, JPEG, JPG and SVG.</value>
  </data>
  <data name="InvalidBrandFileInstance" xml:space="preserve">
      <value>The IImageFile parameter must be an instance of ImageFileStream, ImageFileBytes, or ImageFilePath.</value>
  </data>
  <data name="BrandIdGet" xml:space="preserve">
      <value>Missing required parameter 'brandId' when calling BrandingApi-&amp;gt;GetBrand</value>
  </data>
  <data name="ExceptionFactoryUnsupported" xml:space="preserve">
    <value>Multicast delegate for ExceptionFactory is unsupported</value>
  </data>
  <data name="ContactIdDelete" xml:space="preserve">
    <value>Missing required parameter 'contactId' when calling ContactingApi-&gt;DeleteContact</value>
  </data>
  <data name="ContactIdMissing" xml:space="preserve">
    <value>Missing required parameter 'id' when calling ContactingApi-&gt;UpdateContact</value>
  </data>
</root>
