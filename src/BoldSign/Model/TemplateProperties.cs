// <copyright file="TemplateProperties.cs" company="Syncfusion Inc">
// Copyright (c) Syncfusion Inc. All rights reserved.
// </copyright>

/*
 * BoldSign API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 *
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

namespace BoldSign.Model
{
    using System.Collections.Generic;
    using System.Runtime.Serialization;
    using BoldSign.Api.Model;
    using Newtonsoft.Json;

    /// <summary>
    ///    The template properties includes any activity taken on the template, the user who acts on it, date of action, description of template, and so on.
    /// </summary>
    [DataContract]
    public class TemplateProperties
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TemplateProperties" /> class.
        /// </summary>
        /// <param name="templateId">Gets or sets the template id..</param>
        /// <param name="title">Gets or sets the title..</param>
        /// <param name="description">Gets or Sets description..</param>
        /// <param name="documentTitle">Gets or Sets documentTitle..</param>>
        /// <param name="documentMessage">Gets or Sets documentMessage..</param>
        /// <param name="files">Gets or Sets document uploaded file information..</param>
        /// <param name="roles">Gets or sets the roles..</param>
        /// <param name="commonFields">Gets or sets the common fields..</param>
        /// <param name="cCDetails">Gets or sets the CC details..</param>
        /// <param name="brandId">Gets or sets the brand id..</param>
        /// <param name="allowMessageEditing">Gets or sets the allowMessageEditing..</param>>
        /// <param name="allowNewRoles">Gets or sets the allowNewRoles..</param>
        /// <param name="allowNewFiles">Gets or sets the allowNewFiles..</param>
        /// <param name="allowModifyFiles">Gets or sets the allowModifyFiles..</param>
        /// <param name="enableReassign">Gets or sets a value indicating whether to Enable Reassign.By Default True..</param>
        /// <param name="enablePrintAndSign">Gets or sets a value indicating whether to Enable Print And Sign.</param>
        /// <param name="enableSigningOrder">Gets or sets a value indicating whether to enable signing order..</param>
        /// <param name="createdDate">Gets or sets the createdDate..</param>
        /// <param name="createdBy">createdBy.</param>
        /// <param name="sharedTemplateDetail">sharedTemplateDetail..</param>
        /// <param name="documentInfo">Gets or sets the documentInfo..</param>>
        /// <param name="documentDownloadOption">Gets or sets the documentDownloadOption.</param>
        /// <param name="labels">Gets or sets the documentLabels.</param>
        /// <param name="templateLabels">Gets or sets the templateLabels.</param>
        /// <param name="behalfOf">Gets or sets the behalf of details..</param>
        public TemplateProperties(
            string templateId = default(string),
            string title = default(string),
            string description = default(string),
            string documentTitle = default(string),
            string documentMessage = default(string),
            List<DocumentFiles> files = default(List<DocumentFiles>),
            List<RoleProperties> roles = default(List<RoleProperties>),
            List<TemplateFormField> commonFields = default(List<TemplateFormField>),
            List<string> cCDetails = default(List<string>),
            string brandId = default(string),
            bool allowMessageEditing = default(bool),
            bool allowNewRoles = default(bool),
            bool allowNewFiles = default(bool),
            bool allowModifyFiles = default(bool),
            bool enableReassign = default(bool),
            bool enablePrintAndSign = default(bool),
            bool enableSigningOrder = default(bool),
            long? createdDate = default(long?),
            TemplateSenderDetail createdBy = default(TemplateSenderDetail),
            List<SharedTemplateDetail> sharedTemplateDetail = default(List<SharedTemplateDetail>),
            IEnumerable<DocumentInfo> documentInfo = default(IEnumerable<DocumentInfo>),
            DocumentDownloadOption documentDownloadOption = default(DocumentDownloadOption),
            List<string> labels = default(List<string>),
            List<string> templateLabels = default(List<string>),
            BehalfOf behalfOf = default(BehalfOf))
        {
            this.TemplateId = templateId;
            this.MessageTitle = title;
            this.DocumentDescription = description;
            this.DocumentTitle = documentTitle;
            this.DocumentMessage = documentMessage;
            this.Files = files;
            this.Roles = roles;
            this.CommonFields = commonFields;
            this.CCDetails = cCDetails;
            this.BrandId = brandId;
            this.AllowMessageEditing = allowMessageEditing;
            this.AllowNewRoles = allowNewRoles;
            this.AllowNewFiles = allowNewFiles;
            this.AllowModifyFiles = allowModifyFiles;
            this.EnableReassign = enableReassign;
            this.EnablePrintAndSign = enablePrintAndSign;
            this.EnableSigningOrder = enableSigningOrder;
            this.CreatedDate = createdDate;
            this.CreatedBy = createdBy;
            this.SharedTemplateDetail = sharedTemplateDetail;
            this.DocumentInfo = documentInfo;
            this.DocumentDownloadOption = documentDownloadOption;
            this.Labels = labels;
            this.TemplateLabels = templateLabels;
            this.BehalfOf = behalfOf;
        }

        /// <summary>
        /// Gets or sets the template ID.
        /// </summary>
        /// <value>Gets or sets the document id.</value>
        [DataMember(Name = "templateId", EmitDefaultValue = false)]
        public string TemplateId { get; set; }

        /// <summary>
        /// Gets or sets the message title.
        /// </summary>
        /// <value>Gets or sets the messageTitle.</value>
        [DataMember(Name = "messageTitle", EmitDefaultValue = false)]
        public string MessageTitle { get; set; }

        /// <summary>
        /// Gets or sets template description.
        /// </summary>
        /// <value>Gets or Sets template description.</value>
        [DataMember(Name = "documentDescription", EmitDefaultValue = false)]
        public string DocumentDescription { get; set; }

        /// <summary>
        /// Gets or sets document title.
        /// </summary>
        [DataMember(Name = "documentTitle", EmitDefaultValue = false)]
        public string DocumentTitle { get; set; }

        /// <summary>
        /// Gets or sets template message.
        /// </summary>
        /// <value>Gets or Sets template message.</value>
        [DataMember(Name = "documentMessage", EmitDefaultValue = false)]
        public string DocumentMessage { get; set; }

        /// <summary>
        /// Gets or sets document uploaded file information.
        /// </summary>
        /// <value>Gets or Sets document uploaded file information.</value>
        [DataMember(Name = "files", EmitDefaultValue = false)]
        public List<DocumentFiles> Files { get; set; }

        /// <summary>
        /// Gets or sets roles details.
        /// </summary>
        [DataMember(Name = "roles", EmitDefaultValue = false)]
        public List<RoleProperties> Roles { get; set; }

        /// <summary>
        /// Gets or sets common fields.
        /// </summary>
        [DataMember(Name = "commonFields", EmitDefaultValue = true)]
        public IEnumerable<TemplateFormField> CommonFields { get; set; }

        /// <summary>
        /// Gets or sets the CC details.
        /// </summary>
        /// <value>Gets the value of CC details.</value>
        [DataMember(Name = "cCDetails", EmitDefaultValue = false)]
        public List<string> CCDetails { get; set; }

        /// <summary>
        /// Gets or sets the Brand Id.
        /// </summary>
        /// <value>Gets or sets the brand id.</value>
        [DataMember(Name = "brandId", EmitDefaultValue = false)]
        public string BrandId { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether signing order is enabled.
        /// </summary>
        /// <value>Gets or sets a value of indicating whether to enable signing order.</value>
        [DataMember(Name = "allowMessageEditing", EmitDefaultValue = false)]
        public bool? AllowMessageEditing { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether signing order is enabled.
        /// </summary>
        /// <value>Gets or sets a value of indicating whether to enable signing order.</value>
        [DataMember(Name = "allowNewRoles", EmitDefaultValue = false)]
        public bool? AllowNewRoles { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether allow new files is enabled.
        /// </summary>
        /// <value>Gets or sets a value of indicating whether to enable allow new files.</value>
        [DataMember(Name = "allowNewFiles", EmitDefaultValue = false)]
        public bool? AllowNewFiles { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether allow modify files is enabled.
        /// </summary>
        /// <value>Gets or sets a value of indicating whether to enable modify files.</value>
        [DataMember(Name = "allowModifyFiles", EmitDefaultValue = false)]
        public bool? AllowModifyFiles { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether reassign is enabled.
        /// </summary>
        /// <value>Gets or sets a value of indicating whether to enable reassign mode.By Default True.</value>
        [DataMember(Name = "enableReassign", EmitDefaultValue = false)]
        public bool EnableReassign { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether print and sign is enabled.
        /// </summary>
        /// <value>Gets or sets a value of indicating whether to enable print and sign mode.</value>
        [DataMember(Name = "enablePrintAndSign", EmitDefaultValue = false)]
        public bool EnablePrintAndSign { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether signing order is enabled.
        /// </summary>
        /// <value>Gets or sets a value of indicating whether to enable signing order.</value>
        [DataMember(Name = "enableSigningOrder", EmitDefaultValue = false)]
        public bool EnableSigningOrder { get; set; }

        /// <summary>
        /// Gets or sets the created date of a document.
        /// </summary>
        /// <value>Gets or sets the createdDate.</value>
        [DataMember(Name = "createdDate", EmitDefaultValue = false)]
        public long? CreatedDate { get; set; }

        /// <summary>
        /// Gets or sets the template createdBy details.
        /// </summary>
        /// <value>Gets the value of template createdBy details.</value>
        [DataMember(Name = "createdBy", EmitDefaultValue = false)]
        public TemplateSenderDetail CreatedBy { get; set; }

        /// <summary>
        /// Gets or sets the shared template detail.
        /// </summary>
        /// <value>Gets the value of shared template detail.</value>
        [DataMember(Name = "sharedTemplateDetail", EmitDefaultValue = false)]
        public List<SharedTemplateDetail> SharedTemplateDetail { get; set; }

        /// <summary>
        /// Gets or sets a documentInfo.
        /// </summary>
        [JsonProperty("documentInfo")]
        public IEnumerable<DocumentInfo> DocumentInfo { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether to enable individual document downloads.
        /// </summary>
        [DataMember(Name = "documentDownloadOption", EmitDefaultValue = true)]
        public DocumentDownloadOption DocumentDownloadOption { get; set; }

        /// <summary>
        /// Gets or sets the Tag's Name.
        /// </summary>
        [DataMember(Name = "labels", EmitDefaultValue = false)]
        [JsonProperty("labels")]
        public List<string> Labels { get; set; }

        /// <summary>
        /// Gets or sets the Tag's Name.
        /// </summary>
        [DataMember(Name = "templateLabels", EmitDefaultValue = false)]
        [JsonProperty("templateLabels")]
        public List<string> TemplateLabels { get; set; }

        /// <summary>
        /// Gets or sets the behalf of details.
        /// </summary>
        /// <value>Gets the value of behalf of details.</value>
        [DataMember(Name = "behalfOf", EmitDefaultValue = false)]
        public BehalfOf BehalfOf { get; set; }

        /// <summary>
        /// Gets or sets the Recipient Notification Settings.
        /// </summary>
        /// <value>Gets or sets the Recipient Notification Settings of the signer.</value>
        [DataMember(Name = "recipientNotificationSettings", EmitDefaultValue = false)]
        public RecipientNotificationSettings RecipientNotificationSettings { get; set; }

        /// <summary>
        /// Returns the JSON string presentation of the object.
        /// </summary>
        /// <returns>JSON string presentation of the object.</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }
    }
}
