/*
 * BoldSign API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 *
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

namespace BoldSign.Model
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.Runtime.Serialization;
    using System.Text;
    using BoldSign.Api.Model;
    using Newtonsoft.Json;

    /// <summary>
    ///     The template signer details have functions to perform actions like enabling access code for the signer, setting up the hostâ€™s email, name and user ID, defining the value for the order of the signers, and so on.
    /// </summary>
    [DataContract]
    public class TemplateSignerDetails
    {
        /// <summary>
        ///     Initializes a new instance of the <see cref="TemplateSignerDetails" /> class.
        /// </summary>
        /// <param name="signerName">Gets or sets name of the signer..</param>
        /// <param name="signerRole">Gets or sets role of the signer..</param>
        /// <param name="signerEmail">Gets or sets email address of the signer..</param>
        /// <param name="status">status.</param>
        /// <param name="enableAccessCode">Gets or sets a value indicating whether authentication is enabled for the signer..</param>
        /// <param name="enableEmailOTP">Gets or sets a value indicating whether email OTP authentication is enabled..</param>
        /// <param name="userId">Gets or sets the user id..</param>
        /// <param name="order">Gets or sets the value is used to define the siging order of the signer..</param>
        /// <param name="signerType">signerType.</param>
        /// <param name="hostEmail">Gets or sets the host user email..</param>
        /// <param name="hostName">Gets or sets the host user name..</param>
        /// <param name="hostUserId">Gets or sets the host user id..</param>
        /// <param name="imposeAuthentication">impose Authentication.</param>
        public TemplateSignerDetails(string signerName = default, string signerRole = default, string signerEmail = default, SignerStatus? status = default, bool enableAccessCode = default, bool enableEmailOTP = default, string userId = default, int order = default, SignerType? signerType = default, string hostEmail = default, string hostName = default, string hostUserId = default, ImposeAuthentication imposeAuthentication = ImposeAuthentication.None)
        {
            this.SignerName = signerName;
            this.SignerRole = signerRole;
            this.SignerEmail = signerEmail;
            this.UserId = userId;
            this.HostEmail = hostEmail;
            this.HostName = hostName;
            this.HostUserId = hostUserId;
            this.SignerName = signerName;
            this.SignerRole = signerRole;
            this.SignerEmail = signerEmail;
            this.Status = status;
            this.EnableAccessCode = enableAccessCode;
            this.EnableEmailOTP = enableEmailOTP;
            this.UserId = userId;
            this.Order = order;
            this.SignerType = signerType;
            this.HostEmail = hostEmail;
            this.HostName = hostName;
            this.HostUserId = hostUserId;
            this.ImposeAuthentication = imposeAuthentication;
        }

        /// <summary>
        ///     Gets or Sets Status of a signer.
        /// </summary>
        [DataMember(Name = "status", EmitDefaultValue = false)]
        public SignerStatus? Status { get; set; }

        /// <summary>
        ///     Gets or Sets SignerType.
        /// </summary>
        [DataMember(Name = "signerType", EmitDefaultValue = false)]
        public SignerType? SignerType { get; set; }

        /// <summary>
        ///     Gets or sets name of the signer.
        /// </summary>
        /// <value>Gets or sets name of the signer.</value>
        [DataMember(Name = "signerName", EmitDefaultValue = true)]
        public string SignerName { get; set; }

        /// <summary>
        ///     Gets or sets role of the signer.
        /// </summary>
        /// <value>Gets or sets role of the signer.</value>
        [DataMember(Name = "signerRole", EmitDefaultValue = true)]
        public string SignerRole { get; set; }

        /// <summary>
        ///     Gets or sets email address of the signer.
        /// </summary>
        /// <value>Gets or sets email address of the signer.</value>
        [DataMember(Name = "signerEmail", EmitDefaultValue = true)]
        public string SignerEmail { get; set; }

        /// <summary>
        ///     Gets or sets a value indicating whether authentication is enabled for the signer.
        /// </summary>
        /// <value>Gets or sets a value indicating whether authentication is enabled for the signer.</value>
        [DataMember(Name = "enableAccessCode", EmitDefaultValue = false)]
        public bool EnableAccessCode { get; set; }

        /// <summary>
        ///     Gets or sets a value indicating whether email OTP authentication is enabled.
        /// </summary>
        /// <value>Gets or sets a value indicating whether email OTP authentication is enabled.</value>
        [DataMember(Name = "enableEmailOTP", EmitDefaultValue = false)]
        public bool EnableEmailOTP { get; set; }

        /// <summary>
        /// Gets or sets a value of impose authentication.
        /// </summary>
        /// <value>Gets or sets the impose authentication.</value>
        [DataMember(Name = "imposeAuthentication", EmitDefaultValue = false)]
        public ImposeAuthentication ImposeAuthentication { get; set; }

        /// <summary>
        ///     Gets or sets the user Id.
        /// </summary>
        /// <value>Gets or sets the user id.</value>
        [DataMember(Name = "userId", EmitDefaultValue = true)]
        public string UserId { get; set; }

        /// <summary>
        ///     Gets or sets the value is used to define the siging order of the signers.
        /// </summary>
        /// <value>Gets or sets the value is used to define the signing order of the signer.</value>
        [DataMember(Name = "order", EmitDefaultValue = false)]
        public int Order { get; set; }

        /// <summary>
        ///     Gets or sets the host user email.
        /// </summary>
        /// <value>Gets or sets the host user email.</value>
        [DataMember(Name = "hostEmail", EmitDefaultValue = true)]
        public string HostEmail { get; set; }

        /// <summary>
        ///     Gets or sets the host user name.
        /// </summary>
        /// <value>Gets or sets the host user name.</value>
        [DataMember(Name = "hostName", EmitDefaultValue = true)]
        public string HostName { get; set; }

        /// <summary>
        ///     Gets or sets the host user an ID.
        /// </summary>
        /// <value>Gets or sets the host user id.</value>
        [DataMember(Name = "hostUserId", EmitDefaultValue = true)]
        public string HostUserId { get; set; }

        /// <summary>
        /// Gets or Sets a delivery mode.
        /// </summary>
        /// <value>Gets or sets the delivery mode.</value>
        [DataMember(Name = "deliveryMode", EmitDefaultValue = true)]
        public DeliveryMode DeliveryMode { get; set; }

        /// <summary>
        /// Gets or sets the phone number.
        /// </summary>
        /// <value>Gets or sets a phone number.</value>
        [DataMember(Name = "phoneNumber", EmitDefaultValue = false)]
        public PhoneNumber PhoneNumber { get; set; }

        /// <summary>
        ///     Gets or sets a value indicating whether gets or sets the allow field configuration.
        /// </summary>
        [DataMember(Name = "allowFieldConfiguration", EmitDefaultValue = false)]
        public bool AllowFieldConfiguration { get; set; }

        /// <summary>
        ///     Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson() => JsonConvert.SerializeObject(this, Formatting.Indented);
    }
}
