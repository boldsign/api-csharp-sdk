/*
 * BoldSign API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 *
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

namespace BoldSign.Model
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.Linq;
    using System.Runtime.Serialization;
    using System.Text;
    using Newtonsoft.Json;

    /// <summary>
    ///     The documents properties include users who acted on it, activity date, cc details, created date, and so on.
    /// </summary>
    [DataContract]
    public class Document
    {
        /// <summary>
        ///     Initializes a new instance of the <see cref="Document" /> class.
        /// </summary>
        /// <param name="documentId">Gets or sets the document id..</param>
        /// <param name="senderDetail">senderDetail.</param>
        /// <param name="ccDetails">Gets or sets the CC details..</param>
        /// <param name="createdDate">Gets or sets the createdDate..</param>
        /// <param name="activityDate">Gets or sets the activityDate..</param>
        /// <param name="activityBy">Gets or sets the activityBy..</param>
        /// <param name="messageTitle">Gets or sets the messageTitle..</param>
        /// <param name="status">status.</param>
        /// <param name="signerDetails">Gets or sets the signerDetails..</param>
        /// <param name="expiryDate">Gets or sets the expiryDate..</param>
        /// <param name="enableSigningOrder">Gets or sets a value indicating whether to enable signing order..</param>
        /// <param name="labels">Gets or sets the labels.</param>
        /// <param name="cursor">Gets or sets the cursor.</param>
        /// <param name="brandId">Gets or sets the brandId.</param>
        public Document(string documentId = default, DocumentSenderDetail senderDetail = default, List<DocumentCcDetails> ccDetails = default, long createdDate = default, long? activityDate = default, string activityBy = default, string messageTitle = default, DocumentStatus? status = default, List<DocumentSignerDetails> signerDetails = default, long? expiryDate = default, bool enableSigningOrder = default, List<string> labels = default, long? cursor = default, string brandId = default)
        {
            this.DocumentId = documentId;
            this.CcDetails = ccDetails;
            this.ActivityDate = activityDate;
            this.ActivityBy = activityBy;
            this.MessageTitle = messageTitle;
            this.SignerDetails = signerDetails;
            this.ExpiryDate = expiryDate;
            this.DocumentId = documentId;
            this.SenderDetail = senderDetail;
            this.CcDetails = ccDetails;
            this.CreatedDate = createdDate;
            this.ActivityDate = activityDate;
            this.ActivityBy = activityBy;
            this.MessageTitle = messageTitle;
            this.Status = status;
            this.SignerDetails = signerDetails;
            this.ExpiryDate = expiryDate;
            this.EnableSigningOrder = enableSigningOrder;
            this.Labels = labels;
            this.Cursor = cursor;
            this.BrandId = brandId;
        }

        /// <summary>
        ///  Gets or Sets document status.
        /// </summary>
        [DataMember(Name = "status", EmitDefaultValue = false)]
        public DocumentStatus? Status { get; set; }

        /// <summary>
        ///  Gets or sets the document Id.
        /// </summary>
        /// <value>Gets or sets the document Id.</value>
        [DataMember(Name = "documentId", EmitDefaultValue = true)]
        public string DocumentId { get; set; }

        /// <summary>
        ///  Gets or sets sender detail of a document.
        /// </summary>
        [DataMember(Name = "senderDetail", EmitDefaultValue = false)]
        public DocumentSenderDetail SenderDetail { get; set; }

        /// <summary>
        ///  Gets or sets the CC details.
        /// </summary>
        /// <value>Gets or sets the CC details.</value>
        [DataMember(Name = "ccDetails", EmitDefaultValue = true)]
        public List<DocumentCcDetails> CcDetails { get; set; }

        /// <summary>
        ///     Gets or sets the created date.
        /// </summary>
        /// <value>Gets or sets the createdDate.</value>
        [DataMember(Name = "createdDate", EmitDefaultValue = false)]
        public long CreatedDate { get; set; }

        /// <summary>
        ///  Gets or sets the activity date.
        /// </summary>
        /// <value>Gets or sets the activityDate.</value>
        [DataMember(Name = "activityDate", EmitDefaultValue = true)]
        public long? ActivityDate { get; set; }

        /// <summary>
        /// Gets or sets the name of the user who performed action.
        /// </summary>
        /// <value>Gets or sets the activityBy.</value>
        [DataMember(Name = "activityBy", EmitDefaultValue = true)]
        public string ActivityBy { get; set; }

        /// <summary>
        ///     Gets or sets the message title.
        /// </summary>
        /// <value>Gets or sets the messageTitle.</value>
        [DataMember(Name = "messageTitle", EmitDefaultValue = true)]
        public string MessageTitle { get; set; }

        /// <summary>
        ///  Gets or sets the signer details for a document.
        /// </summary>
        /// <value>Gets or sets the signerDetails.</value>
        [DataMember(Name = "signerDetails", EmitDefaultValue = true)]
        public List<DocumentSignerDetails> SignerDetails { get; set; }

        /// <summary>
        ///  Gets or sets the expiry date.
        /// </summary>
        /// <value>Gets or sets the expiryDate.</value>
        [DataMember(Name = "expiryDate", EmitDefaultValue = true)]
        public long? ExpiryDate { get; set; }

        /// <summary>
        ///  Gets or sets a value indicating whether signing order is enabled.
        /// </summary>
        /// <value>Gets or sets a value indicating whether to enable signing order.</value>
        [DataMember(Name = "enableSigningOrder", EmitDefaultValue = false)]
        public bool EnableSigningOrder { get; set; }

        /// <summary>
        /// Gets or sets a labels.
        /// </summary>
        [DataMember(Name = "labels", EmitDefaultValue = false)]
        public List<string> Labels { get; set; }

        /// <summary>
        ///     Gets or sets the cursor.
        /// </summary>
        [DataMember(Name = "cursor", EmitDefaultValue = false)]
        public long? Cursor { get; set; }

        /// <summary>
        /// Gets or sets a brandId.
        /// </summary>
        [DataMember(Name = "brandId", EmitDefaultValue = false)]
        public string BrandId { get; set; }

        /// <summary>
        ///     Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson() => JsonConvert.SerializeObject(this, Formatting.Indented);
    }
}
