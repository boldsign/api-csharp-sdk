/* 
 * BoldSign API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

namespace BoldSign.Model
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.IO;
    using System.Runtime.Serialization;
    using System.Text;
    using Newtonsoft.Json;

    /// <summary>
    ///     The access code model.
    /// </summary>
    [DataContract]
    public class AccessCodeDetails
    {
        /// <summary>
        ///     Initializes a new instance of the <see cref="AccessCodeDetails" /> class.
        /// </summary>
        /// <param name="accessCode">Gets or sets the access code. (required).</param>
        /// <param name="onBehalfOf">The on behalfof email.</param>
        /// <param name="phoneNumber">Gets or sets the phone number.</param>
        public AccessCodeDetails(string accessCode = default, string onBehalfOf = default, PhoneNumber phoneNumber = default)
        {
            // to ensure "accessCode" is required (not null)
            if (accessCode == null)
            {
                throw new InvalidDataException("accessCode is a required property for AccessCodeDetails and cannot be null");
            }

            this.AccessCode = accessCode;
            this.OnBehalfOf = onBehalfOf;
            this.PhoneNumber = phoneNumber;
        }

        /// <summary>
        ///  Gets or sets the access code.
        /// </summary>
        /// <value>Gets or sets the access code.</value>
        [DataMember(Name = "accessCode", EmitDefaultValue = true)]
        public string AccessCode { get; set; }

        /// <summary>
        /// Gets or sets the on behalf of email.
        /// </summary>
        [DataMember(Name = "onBehalfOf", EmitDefaultValue = true)]
        public string OnBehalfOf { get; set; }

        /// <summary>
        /// Gets or sets the on behalf of email.
        /// </summary>
        [DataMember(Name = "phoneNumber", EmitDefaultValue = true)]
        public PhoneNumber PhoneNumber { get; set; }

        /// <summary>
        ///     Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson() => JsonConvert.SerializeObject(this, Formatting.Indented);
    }
}
