// <copyright file="ViewBrandDetails.cs" company="Syncfusion Inc">
// Copyright (c) Syncfusion Inc. All rights reserved.
// </copyright>

/*
 * BoldSign API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 *
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

namespace BoldSign.Model
{
    using System;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    ///     The branding  details  model.
    /// </summary>
    [DataContract]
    public class ViewBrandDetails
    {
        /// <summary>
        /// Gets or sets the brand id.
        /// </summary>
        [DataMember(Name = "brandId", EmitDefaultValue = true)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or sets the brand logo.
        /// </summary>
        [DataMember(Name = "brandLogo", EmitDefaultValue = true)]
        public string BrandLogo { get; set; }

        /// <summary>
        /// Gets or sets the brand name.
        /// </summary>
        [DataMember(Name = "brandName", EmitDefaultValue = true)]
        public string BrandName { get; set; }

        /// <summary>
        /// Gets or sets the background color.
        /// </summary>
        [DataMember(Name = "backgroundColor", EmitDefaultValue = true)]
        public string BackgroundColor { get; set; }

        /// <summary>
        /// Gets or sets the button color.
        /// </summary>
        [DataMember(Name = "buttonColor", EmitDefaultValue = true)]
        public string ButtonColor { get; set; }

        /// <summary>
        /// Gets or sets the button text color.
        /// </summary>
        [DataMember(Name = "buttonTextColor", EmitDefaultValue = true)]
        public string ButtonTextColor { get; set; }

        /// <summary>
        /// Gets or sets the email display name.
        /// </summary>
        [DataMember(Name = "emailDisplayName", EmitDefaultValue = true)]
        public string EmailDisplayName { get; set; }

        /// <summary>
        /// Gets or sets the disclaimer title.
        /// </summary>
        [DataMember(Name = "disclaimerTitle", EmitDefaultValue = true)]
        public string DisclaimerTitle { get; set; }

        /// <summary>
        /// Gets or sets the disclaimer description.
        /// </summary>
        [DataMember(Name = "disclaimerDescription", EmitDefaultValue = true)]
        public string DisclaimerDescription { get; set; }

        /// <summary>
        /// Gets or sets the redirect url.
        /// </summary>
        [DataMember(Name = "redirectUrl", EmitDefaultValue = true)]
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Design", "CA1056:Uri properties should not be strings", Justification = "We need to change this later, as other projects depends on it.")]
        public string RedirectUrl { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether is default.
        /// </summary>
        [DataMember(Name = "isDefault", EmitDefaultValue = true)]
        public bool IsDefault { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether can hide tag line.
        /// </summary>
        [DataMember(Name = "canHideTagLine", EmitDefaultValue = true)]
        public bool CanHideTagLine { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether combine audit trial enable or not.
        /// </summary>
        [DataMember(Name = "combineAuditTrail", EmitDefaultValue = true)]
        public bool CombineAuditTrail { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether exclude audit trial from email enable or not.
        /// </summary>
        [DataMember(Name = "excludeAuditTrailFromEmail", EmitDefaultValue = true)]
        public bool ExcludeAuditTrailFromEmail { get; set; }

        /// <summary>
        /// Gets or sets a value indicating delivery of the signed document in email as attachment or link to view and download the document.
        /// </summary>
        [DataMember(Name = "emailSignedDocument", EmitDefaultValue = true)]
        public EmailSignedDocument EmailSignedDocument { get; set; }

        /// <summary>
        /// Gets or sets a value indicating time zone of the document.
        /// </summary>
        [DataMember(Name = "documentTimeZone", EmitDefaultValue = true)]
        public string DocumentTimeZone { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether standard fields can be viewed or not.
        /// </summary>
        [DataMember(Name = "showBuiltInFormFields", EmitDefaultValue = true)]
        public bool ShowBuiltInFormFields { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether custom fields are allowed to create.
        /// </summary>
        [DataMember(Name = "allowCustomFieldCreation", EmitDefaultValue = true)]
        public bool AllowCustomFieldCreation { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether shared fields can be viewed or not.
        /// </summary>
        [DataMember(Name = "showSharedCustomFields", EmitDefaultValue = true)]
        public bool ShowSharedCustomFields { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether to hide decline.
        /// </summary>
        [DataMember(Name = "hideDecline", EmitDefaultValue = true)]
        public bool HideDecline { get; set; }

        /// <summary>
        /// Gets or sets a value indicating whether to hide save.
        /// </summary>
        [DataMember(Name = "hideSave", EmitDefaultValue = true)]
        public bool HideSave { get; set; }

        /// <summary>
        ///     Returns the JSON string presentation of the object.
        /// </summary>
        /// <returns>JSON string presentation of the object.</returns>
        public virtual string ToJson() => JsonConvert.SerializeObject(this, Formatting.Indented);
    }
}
