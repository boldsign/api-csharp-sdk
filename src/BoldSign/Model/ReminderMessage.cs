/*
 * BoldSign API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 *
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

namespace BoldSign.Model
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.Runtime.Serialization;
    using System.Text;
    using Newtonsoft.Json;

    /// <summary>
    ///     Reminder Message for signers.
    /// </summary>
    [DataContract]
    public class ReminderMessage
    {
        /// <summary>
        ///     Initializes a new instance of the <see cref="ReminderMessage" /> class.
        /// </summary>
        /// <param name="message">Gets or sets reminder message..</param>
        /// <param name="onBehalfOf">The on behalfof email.</param>
        /// <param name="reminderPhoneNumbers">The reminder phone number.</param>
        public ReminderMessage(string message = default, string onBehalfOf = default, List<PhoneNumber> reminderPhoneNumbers = default)
        {
            this.Message = message;
            this.OnBehalfOf = onBehalfOf;
            this.ReminderPhoneNumbers = reminderPhoneNumbers;
        }

        /// <summary>
        /// Gets or sets reminder message.
        /// </summary>
        /// <value>Gets or sets reminder message.</value>
        [DataMember(Name = "message", EmitDefaultValue = true)]
        public string Message { get; set; }

        /// <summary>
        /// Gets or sets the on behalf of email.
        /// </summary>
        [DataMember(Name = "onBehalfOf", EmitDefaultValue = true)]
        public string OnBehalfOf { get; set; }

        /// <summary>
        /// Gets or sets the on behalf of email.
        /// </summary>
        [DataMember(Name = "reminderPhoneNumbers", EmitDefaultValue = true)]
        public List<PhoneNumber> ReminderPhoneNumbers { get; set; }

        /// <summary>
        ///     Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson() => JsonConvert.SerializeObject(this, Formatting.Indented);
    }
}
