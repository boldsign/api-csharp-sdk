// <copyright file="Date.cs" company="Syncfusion Inc">
// Copyright (c) Syncfusion Inc. All rights reserved.
// </copyright>

/*
 * BoldSign API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 *
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

namespace BoldSign.Model.IdVerification
{
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// The date details.
    /// </summary>
    [DataContract]
#pragma warning disable CA1716 // Identifiers should not match keywords
    public class Date
#pragma warning restore CA1716 // Identifiers should not match keywords
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="Date" /> class.
        /// </summary>
        /// <param name="day">Gets or sets the day.</param>
        /// <param name="month">Gets or sets the month.</param>
        /// <param name="year">Gets or sets the year.</param>
        public Date(long? day = default, long? month = default, long? year = default)
        {
            this.Day = day;
            this.Month = month;
            this.Year = year;
        }

        /// <summary>
        /// Gets or sets the day.
        /// </summary>
        [DataMember(Name = "day", EmitDefaultValue = false)]
        public long? Day { get; set; }

        /// <summary>
        /// Gets or sets the month.
        /// </summary>
        [DataMember(Name = "month", EmitDefaultValue = false)]
        public long? Month { get; set; }

        /// <summary>
        /// Gets or sets the year.
        /// </summary>
        [DataMember(Name = "year", EmitDefaultValue = false)]
        public long? Year { get; set; }

        /// <summary>
        /// Returns the JSON string presentation of the object.
        /// </summary>
        /// <returns>JSON string presentation of the object.</returns>
        public virtual string ToJson() => JsonConvert.SerializeObject(this, Formatting.Indented);
    }
}
