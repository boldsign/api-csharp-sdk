// <copyright file="EmbeddedVerificationRequest.cs" company="Syncfusion Inc">
// Copyright (c) Syncfusion Inc. All rights reserved.
// </copyright>

/*
 * BoldSign API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1
 *
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

namespace BoldSign.Model.IdVerification
{
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// The embedded file details.
    /// </summary>
    [DataContract]
    public class EmbeddedVerificationRequest
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EmbeddedVerificationRequest" /> class.
        /// </summary>
        /// <param name="emailId">Gets or sets signer email.</param>
        /// <param name="countryCode">Gets or sets country code.</param>
        /// <param name="phoneNumber">Gets or sets phone number.</param>
        /// <param name="redirectUrl">Gets or sets redirect url.</param>
        /// <param name="order">Gets or sets signer order.</param>
        /// <param name="onBehalfOf">Gets or sets onBehalfOf email.</param>
        public EmbeddedVerificationRequest(
            string emailId = default,
            string countryCode = default,
            string phoneNumber = default,
            string redirectUrl = default,
            int? order = 1,
            string onBehalfOf = default)
        {
            this.EmailId = emailId;
            this.CountryCode = countryCode;
            this.PhoneNumber = phoneNumber;
            this.RedirectUrl = redirectUrl;
            this.Order = order;
            this.OnBehalfOf = onBehalfOf;
        }

        /// <summary>
        /// Gets or sets signer email.
        /// </summary>
        [DataMember(Name = "emailId", EmitDefaultValue = false)]
        public string EmailId { get; set; }

        /// <summary>
        /// Gets or sets country code.
        /// </summary>
        [DataMember(Name = "countryCode", EmitDefaultValue = false)]
        public string CountryCode { get; set; }

        /// <summary>
        /// Gets or sets phone number.
        /// </summary>
        [DataMember(Name = "phoneNumber", EmitDefaultValue = false)]
        public string PhoneNumber { get; set; }

        /// <summary>
        /// Gets or sets the redirect url.
        /// </summary>
        [DataMember(Name = "redirectUrl", EmitDefaultValue = false)]
#pragma warning disable CA1056 // Uri properties should not be strings
        public string RedirectUrl { get; set; }
#pragma warning restore CA1056 // Uri properties should not be strings

        /// <summary>
        /// Gets or sets the signer order.
        /// </summary>
        [DataMember(Name = "order", EmitDefaultValue = false)]
        public int? Order { get; set; }

        /// <summary>
        /// Gets or sets the behalf email.
        /// </summary>
        [DataMember(Name = "onBehalfOf", EmitDefaultValue = false)]
        public string OnBehalfOf { get; set; }

        /// <summary>
        /// Returns the JSON string presentation of the object.
        /// </summary>
        /// <returns>JSON string presentation of the object.</returns>
        public virtual string ToJson() => JsonConvert.SerializeObject(this, Formatting.Indented);
    }
}
